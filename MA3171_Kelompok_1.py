# -*- coding: utf-8 -*-
"""MA3171 Kelompok 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i6zmbg5Y1NwDE8JhHhBBqYt74Lkt9gyA

**Kelompok 1**

Gregory Benedict Tanidi (10118082)

Abdillah Ahmad (10119035)

Fajar Trisno Purwanto (10119043)

Muhammad Alif Darmamulia (10119059)
"""

import numpy as np
import matplotlib.pyplot as plt
import math

eps = 10e-5

def f(x, c, d, circles):
    n = len(circles)
    n_inrange = 0
    yca = []
    for i in range(n):
        rc = circles[i][0]
        xc = circles[i][1]
        yc = circles[i][2]
        if xc - rc >= x or x >= xc + rc:
            continue
        new_member = [(yc - (rc**2 - (x-xc)**2)**0.5), (yc + (rc**2 - (x-xc)**2)**0.5)]
        yca.append(new_member)
        n_inrange += 1
    ycs = sorted(yca)
    if n_inrange == 0:
        return 0.0
    ret = 0.0
    lowerbound = ycs[0][0]
    for i in range(n_inrange):
        low = ycs[i][0]
        high = ycs[i][1]
        if low < lowerbound:
            low = lowerbound
        if high < lowerbound:
            high = lowerbound
        if low < c:
            low = c
        if low > d:
            low = d
        if high < c:
            high = c
        if high > d:
            high = d
        ret += high - low;
        lowerbound = high
    return ret

def integral(f, a, b, c, d, eps, cir):
    T_kmin1 = (b-a)/2*(f(a,c,d,cir)+f(b,c,d,cir))    # T_0
    T_k = T_kmin1/2 + (b-a)/2*f((a+b)/2,c,d,cir)     # T_1
    h_k = (b-a)/2                                    # h_1
    k = 1

    S = (4*T_k - T_kmin1)/3
    S_lama = S + 2*eps
    while abs(S - S_lama) > eps:
        k += 1
        h_k /= 2
        T_kmin1 = T_k
        T_k = 0
        for i in range(2**(k-1)):
            T_k += f(a + h_k*(2*i+1),c,d,cir)   # T_(k+1)
        T_k *= h_k
        T_k += T_kmin1/2
        
        S_lama = S
        S = (4*T_k - T_kmin1)/3
    print("Integrasi selesai dengan", k, "iterasi.")
    
    return S

a = float(input("Masukkan batas kiri: "))
b = float(input("Masukkan batas kanan: "))
c = float(input("Masukkan batas bawah: "))
d = float(input("Masukkan batas atas: "))
n = int(input("Masukkan banyak hotspot: "))
circles = [[0.0, 0.0, 0.0] for i in range(n)]
# [r, x, y]

for i in range(0, n):
    print("Koordinat dan radius hotspot ke-", i+1, ":", sep='')
    circles[i][1] = float(input("x = "))
    circles[i][2] = float(input("y = "))
    circles[i][0] = float(input("r = "))

sorted(circles)

fig, ax = plt.subplots()

for i in range(n):
  circle = plt.Circle((circles[i][1], circles[i][2]), circles[i][0], color='g', alpha = 0.25)
  ax.add_artist(circle)

for i in range(n):
  outline = plt.Circle((circles[i][1], circles[i][2]), circles[i][0], fill=False, linewidth=1.2)
  ax.add_artist(outline)
  ax.plot((circles[i][1]),(circles[i][2]), 'o', color='r')

ax.set_xlim(a, b)
ax.set_ylim(c, d)
plt.gca().set_aspect('equal')
plt.show()

area = integral(f, a, b, c, d, eps, circles)
percentage = area / ((b-a)*(d-c)) * 100
print("Luas area yang ter-cover WiFi adalah %.4f (%.4f%%)"%(area,percentage))